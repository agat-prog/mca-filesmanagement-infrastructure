apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  labels:
    app: kafka
spec:
  ports:
    - port: 9092
      targetPort: 9092
      protocol: TCP
      name: kafka-9092-port
    - port: 29092
      targetPort: 29092
      protocol: TCP
      name: kafka-29092-port
  type: ClusterIP
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kafka
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:5.2.4
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: EXTERNAL://kafka-service:29092, PLAINTEXT://localhost:9092
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT, EXTERNAL:PLAINTEXT
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: PLAINTEXT
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181          
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"       
            - name: KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE
              value: "false"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1" 
          ports:
            - containerPort: 9092
            - containerPort: 29092
          volumeMounts:
          - mountPath: /var/lib/kafka
            name: kafka-claim
      volumes:
        - name: kafka-claim
          persistentVolumeClaim:
            claimName: kafka-claim
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv
spec:
  storageClassName: standar-rwo
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 800Mi  
  hostPath:
    path: /host/kafka              
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-claim
spec:
  storageClassName: standar-rwo
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 800Mi
